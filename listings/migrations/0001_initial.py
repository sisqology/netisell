# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import models, migrations
from django.conf import settings


class Migration(migrations.Migration):

    dependencies = [
        ('categories', '0001_initial'),
        ('institutions', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Community',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('title', models.CharField(max_length=100)),
                ('slug', models.SlugField(null=True, blank=True)),
                ('description', models.TextField()),
                ('price', models.FloatField(null=True, blank=True)),
                ('location', models.CharField(max_length=100)),
                ('duration', models.CharField(max_length=20, choices=[(b'', b'Duration'), (b'One Week', b'One Week'), (b'Two Weeks', b'Two Weeks'), (b'Three Weeks', b'Three Weeks'), (b'One Month', b'One Month'), (b'Two Months', b'Two Months'), (b'Three Months', b'Three Months'), (b'Four Months', b'Four Months'), (b'Five Months', b'Five Months'), (b'Six  Months', b'Six Months'), (b'One Year', b'One Year'), (b'Others', b'Others')])),
                ('phone', models.CharField(max_length=15)),
                ('email', models.CharField(max_length=50)),
                ('active', models.BooleanField(default=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('area', models.ForeignKey(to='institutions.Area')),
                ('category', models.ForeignKey(to='categories.CommunityCategory')),
                ('user', models.ForeignKey(to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'ordering': ('title',),
                'verbose_name_plural': 'Communities',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('title', models.CharField(max_length=100)),
                ('slug', models.SlugField(null=True, blank=True)),
                ('description', models.TextField()),
                ('rsvp', models.CharField(max_length=50)),
                ('status', models.CharField(default=b'Active', max_length=50, choices=[(b'Active', b'Active'), (b'Postponed', b'Postponed'), (b'Cancelled', b'Cancelled')])),
                ('performer', models.CharField(max_length=100, null=True, blank=True)),
                ('gate_fee', models.FloatField(null=True, blank=True)),
                ('location', models.CharField(max_length=100)),
                ('phone', models.CharField(max_length=15)),
                ('email', models.CharField(max_length=50)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('image1', models.ImageField(upload_to=b'adverts_images', null=True, verbose_name=b'Advert image', blank=True)),
                ('image2', models.ImageField(upload_to=b'adverts_images', null=True, verbose_name=b'Advert image 2', blank=True)),
                ('image3', models.ImageField(upload_to=b'adverts_images', null=True, verbose_name=b'Advert image 3', blank=True)),
                ('image4', models.ImageField(upload_to=b'adverts_images', null=True, verbose_name=b'Advert image 4', blank=True)),
                ('active', models.BooleanField(default=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('area', models.ForeignKey(to='institutions.Area')),
                ('category', models.ForeignKey(to='categories.EventCategory')),
                ('user', models.ForeignKey(to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'ordering': ('title',),
                'verbose_name_plural': 'Events',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Housing',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('title', models.CharField(max_length=100)),
                ('slug', models.SlugField(null=True, blank=True)),
                ('description', models.TextField()),
                ('negotiable', models.CharField(max_length=50, choices=[(b'', b'Negotiable'), (b'Yes', b'Yes'), (b'No', b'No')])),
                ('condition', models.CharField(max_length=50, choices=[(b'', b'Condition'), (b'Bed Space', b'Bed Space'), (b'Full Roommate', b'Full Roommate'), (b'Flat Mate', b'Flat Mate'), (b'Others', b'Others')])),
                ('duration', models.CharField(max_length=20, choices=[(b'', b'Duration'), (b'One Week', b'One Week'), (b'Two Weeks', b'Two Weeks'), (b'Three Weeks', b'Three Weeks'), (b'One Month', b'One Month'), (b'Two Months', b'Two Months'), (b'Three Months', b'Three Months'), (b'Four Months', b'Four Months'), (b'Five Months', b'Five Months'), (b'Six  Months', b'Six Months'), (b'One Year', b'One Year'), (b'Others', b'Others')])),
                ('gender', models.CharField(default=b'Any', max_length=20, choices=[(b'', b'Gender'), (b'Male', b'Male'), (b'Female', b'Female'), (b'Any', b'Any')])),
                ('price', models.FloatField(null=True, blank=True)),
                ('location', models.CharField(max_length=100)),
                ('phone', models.CharField(max_length=15)),
                ('email', models.CharField(max_length=50)),
                ('image1', models.ImageField(upload_to=b'adverts_images', null=True, verbose_name=b'Advert image', blank=True)),
                ('image2', models.ImageField(upload_to=b'adverts_images', null=True, verbose_name=b'Advert image 2', blank=True)),
                ('image3', models.ImageField(upload_to=b'adverts_images', null=True, verbose_name=b'Advert image 3', blank=True)),
                ('image4', models.ImageField(upload_to=b'adverts_images', null=True, verbose_name=b'Advert image 4', blank=True)),
                ('active', models.BooleanField(default=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('area', models.ForeignKey(to='institutions.Area')),
                ('category', models.ForeignKey(to='categories.HousingCategory')),
                ('user', models.ForeignKey(to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'ordering': ('title',),
                'verbose_name_plural': 'Housings',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Sale',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('title', models.CharField(max_length=100)),
                ('slug', models.SlugField(null=True, blank=True)),
                ('description', models.TextField()),
                ('price', models.FloatField(null=True, blank=True)),
                ('condition', models.CharField(max_length=50, choices=[(b'', b'Condition'), (b'New', b'New'), (b'Mint', b'Mint'), (b'Refurbished', b'Refurbished'), (b'Fairly Used', b'Fairly Used'), (b'Scrap', b'Scrap')])),
                ('negotiable', models.CharField(max_length=50, choices=[(b'', b'Negotiable'), (b'Yes', b'Yes'), (b'No', b'No')])),
                ('phone', models.CharField(max_length=15)),
                ('email', models.CharField(max_length=50)),
                ('image1', models.ImageField(upload_to=b'adverts_images', null=True, verbose_name=b'Advert image', blank=True)),
                ('image2', models.ImageField(upload_to=b'adverts_images', null=True, verbose_name=b'Advert image 2', blank=True)),
                ('image3', models.ImageField(upload_to=b'adverts_images', null=True, verbose_name=b'Advert image 3', blank=True)),
                ('image4', models.ImageField(upload_to=b'adverts_images', null=True, verbose_name=b'Advert image 4', blank=True)),
                ('active', models.BooleanField(default=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('area', models.ForeignKey(to='institutions.Area')),
                ('category', models.ForeignKey(to='categories.SaleCategory')),
                ('user', models.ForeignKey(to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'ordering': ('title',),
                'verbose_name_plural': 'Sales',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('title', models.CharField(max_length=100)),
                ('slug', models.SlugField(null=True, blank=True)),
                ('description', models.TextField()),
                ('negotiable', models.CharField(max_length=50, choices=[(b'', b'Negotiable'), (b'Yes', b'Yes'), (b'No', b'No')])),
                ('price', models.FloatField(null=True, blank=True)),
                ('location', models.CharField(max_length=100)),
                ('phone', models.CharField(max_length=15)),
                ('email', models.CharField(max_length=50)),
                ('image1', models.ImageField(upload_to=b'adverts_images', null=True, verbose_name=b'Advert image', blank=True)),
                ('image2', models.ImageField(upload_to=b'adverts_images', null=True, verbose_name=b'Advert image 2', blank=True)),
                ('image3', models.ImageField(upload_to=b'adverts_images', null=True, verbose_name=b'Advert image 3', blank=True)),
                ('image4', models.ImageField(upload_to=b'adverts_images', null=True, verbose_name=b'Advert image 4', blank=True)),
                ('active', models.BooleanField(default=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('area', models.ForeignKey(to='institutions.Area')),
                ('category', models.ForeignKey(to='categories.ServiceCategory')),
                ('user', models.ForeignKey(to=settings.AUTH_USER_MODEL, null=True)),
            ],
            options={
                'ordering': ('title',),
                'verbose_name_plural': 'Services',
            },
            bases=(models.Model,),
        ),
    ]
